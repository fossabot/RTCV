name: Build all dependants
on:
  push:
    branches:
      - '505' # Bizhawk and CemuStub depend on RTCV 505
      - 'GithubActionTest'
  pull_request:
    branches:
      - '505' # Bizhawk and CemuStub depend on RTCV 505

jobs:
  Bizhawk:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout Bizhawk
      uses: actions/checkout@v2
      with:
        repository: 'ircluzar/Bizhawk-Vanguard'
        ref: 'master'
        path: 'Bizhawk-Vanguard'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in Bizhawk
      run: nuget restore '.\Bizhawk-Vanguard\Real-Time Corruptor\BizHawk_RTC\BizHawk.sln'

    # Build Bizhawk
    - name: Build Bizhawk-Vanguard
      run: msbuild '.\Bizhawk-Vanguard\Real-Time Corruptor\BizHawk_RTC\BizHawk.sln'

  CemuStub:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout CemuStub
      uses: actions/checkout@v2
      with:
        repository: 'ircluzar/CemuStub-Vanguard'
        ref: 'master'
        path: 'CemuStub-Vanguard'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in CemuStub
      run: nuget restore '.\CemuStub-Vanguard\'

    # Build CemuStub
    - name: Build CemuStub-Vanguard
      run: msbuild '.\CemuStub-Vanguard\'

  FileStub:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout FileStub
      uses: actions/checkout@v2
      with:
        repository: 'ircluzar/FileStub-Vanguard'
        ref: 'master'
        path: 'FileStub-Vanguard'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in FileStub
      run: nuget restore '.\FileStub-Vanguard\FileStub-Vanguard.sln'

    # Build FileStub
    - name: Build FileStub-Vanguard
      run: msbuild '.\FileStub-Vanguard\FileStub-Vanguard.sln'

  UnityStub:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout UnityStub
      uses: actions/checkout@v2
      with:
        repository: 'ircluzar/UnityStub-Vanguard'
        ref: 'master'
        path: 'UnityStub-Vanguard'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in UnityStub
      run: nuget restore '.\UnityStub-Vanguard\UnityStub-Vanguard.sln'

    # Build UnityStub
    - name: Build UnityStub-Vanguard
      run: msbuild '.\UnityStub-Vanguard\UnityStub-Vanguard.sln'

  ProcessStub:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout ProcessStub
      uses: actions/checkout@v2
      with:
        repository: 'NarryG/ProcessStub-Vanguard'
        ref: 'master'
        path: 'ProcessStub-Vanguard'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in ProcessStub
      run: nuget restore '.\ProcessStub-Vanguard\ProcessStub-Vanguard.sln'

    # Build ProcessStub
    - name: Build ProcessStub-Vanguard
      run: msbuild '.\ProcessStub-Vanguard\ProcessStub-Vanguard.sln'

  Dolphin:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout Dolphin
      uses: actions/checkout@v2
      with:
        repository: 'NarryG/dolphin-vanguard'
        ref: 'Vanguard'
        path: 'dolphin-vanguard'
        submodules: 'true'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in Dolphin
      run: nuget restore '.\dolphin-vanguard\Source\dolphin-emu.sln'

    # Build Dolphin
    - name: Build dolphin-vanguard
      run: msbuild '.\dolphin-vanguard\Source\dolphin-emu.sln'

  PCSX2:
    runs-on: windows-2019
    steps:
    # Checkout relevant code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout PCSX2
      uses: actions/checkout@v2
      with:
        repository: 'NarryG/pcsx2-vanguard'
        ref: 'Vanguard'
        path: 'pcsx2-vanguard'
        submodules: 'recursive'

    # Setup Tooling
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

    # Restore nuget packages for all targets
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'
    - name: Restore Nuget packages in PCSX2
      run: nuget restore .\pcsx2-vanguard\PCSX2_suite.sln

    - name: Build PCSX2
      run: msbuild .\pcsx2-vanguard\PCSX2_suite.sln

  melonDS:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'NarryG/melonDS-Vanguard'
        ref: 'Vanguard'
    - name: Install MSYS2
      working-directory: ${{runner.workspace}}
      run: | # Fetch MSYS2 build from XQEmu. Official distribution causes a CI failure due to permission errors.
        Invoke-WebRequest -Uri "https://github.com/xqemu/ci-environment-msys2/releases/latest/download/msys64.7z" -OutFile "msys64.7z"
        7z x -y msys64.7z "-oC:\tools\"
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman -Syuq --noconfirm"
    - name: Install dependencies
      run: C:\tools\msys64\usr\bin\bash.exe -lc "pacman -Sq --noconfirm git make mingw-w64-x86_64-{cmake,mesa,SDL2,qt5-static,toolchain}"
    - name: Create build environment
      run: |
        New-Item -ItemType directory -Path ${{runner.workspace}}\melonDS\build
        Copy-Item -Path ${{runner.workspace}}\melonDS -Destination C:\tools\msys64\home\runneradmin -Recurse
    - name: Configure
      run: |
        C:\tools\msys64\usr\bin\bash.exe -lc "export PATH=`"/mingw64/bin:`$PATH`" \
        && cd melonDS/build && cmake .. -G 'MSYS Makefiles' -DCMAKE_BUILD_TYPE=Debug -DBUILD_STATIC=ON -DQT5_STATIC_DIR=C:/tools/msys64/mingw64/qt5-static"
    - name: Make
      run: |
        C:\tools\msys64\usr\bin\bash.exe -lc "export PATH=`"/mingw64/bin:`$PATH`" \
        && cd melonDS/build && make -j$(nproc --all) \
        && ../msys-dist.sh"

  Citra:
    runs-on: windows-2019
    steps:
    # Checkout code
    - name: Checkout current build target
      uses: actions/checkout@v2
      with:
        path: 'RTCV'
    - name: Checkout Citra
      uses: actions/checkout@v2
      with:
        repository: 'NarryG/citra-vanguard'
        ref: 'vanguard'
        path: 'citra-vanguard'
        submodules: 'recursive'

    # Setup RTCV
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: 'latest'
    - name: Restore Nuget packages in current build target
      run: nuget restore '.\RTCV\'

    # Citra build
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Make directory for citra output
      shell: powershell
      run: New-Item -ItemType directory -Path ${{runner.workspace}}\RTCV\citra-vanguard\build
    - name: Citra prebuild
      working-directory: ${{runner.workspace}}\citra-vanguard\build
      shell: powershell
      run: cmake -G "CitraVanguardRTCV" -DCITRA_USE_BUNDLED_QT=1 -DCITRA_USE_BUNDLED_SDL2=1 -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON -DUSE_DISCORD_PRESENCE=ON -DENABLE_MF=ON -DENABLE_FFMPEG_VIDEO_DUMPER=ON ..
    - name: Citra build
      working-directory: ${{runner.workspace}}\citra-vanguard\build
      run: msbuild CitraVanguardRTCV/citra.sln
    